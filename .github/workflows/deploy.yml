name: Deploy

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Build project
        run: npm run build

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v3
        with:
          name: production-files
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}

    steps:
      - name: Set tag name
        id: tag
        run: |
          if [[ "${{ github.event_name }}" != "push" ]]; then
            tag=v$(date +%Y%m%d.%H%M%S)
          else
            tag=$(basename "${{ github.ref }}")
          fi
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          tag="${{ steps.tag.outputs.tag }}"
          gh release create --draft "$tag" --title "$tag"
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: production-files
          path: ./dist
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'zip'
          path: ./dist
          filename: 'release.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig'
      - name: Upload Archive
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release upload "${{ needs.release.outputs.tag }}" 'release.zip'
      - name: Publish Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release edit "${{ needs.release.outputs.tag }}" --draft=false
      - uses: eregon/keep-last-n-releases@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
